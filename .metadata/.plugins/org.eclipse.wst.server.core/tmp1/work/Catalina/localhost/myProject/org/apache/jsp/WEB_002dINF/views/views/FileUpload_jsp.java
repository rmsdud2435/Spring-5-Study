/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2019-06-21 09:03:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class FileUpload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/workspace/MyProjectSpring5/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringVersion5/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1556159839864L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Test</title>\r\n");
      out.write("        <script type=\"text/javascript\" src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("        <style>\r\n");
      out.write("            .dragAndDropDiv {\r\n");
      out.write("                border: 2px dashed #92AAB0;\r\n");
      out.write("                width: 650px;\r\n");
      out.write("                height: 200px;\r\n");
      out.write("                color: #92AAB0;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                vertical-align: middle;\r\n");
      out.write("                padding: 10px 0px 10px 10px;\r\n");
      out.write("                font-size:200%;\r\n");
      out.write("                display: table-cell;\r\n");
      out.write("            }\r\n");
      out.write("            .statusbar{\r\n");
      out.write("                border-top:1px solid #A9CCD1;\r\n");
      out.write("                min-height:25px;\r\n");
      out.write("                width:99%;\r\n");
      out.write("                padding:10px 10px 0px 10px;\r\n");
      out.write("                vertical-align:top;\r\n");
      out.write("            }\r\n");
      out.write("            .statusbar:nth-child(odd){\r\n");
      out.write("                background:#EBEFF0;\r\n");
      out.write("            }\r\n");
      out.write("            .filename{\r\n");
      out.write("                display:inline-block;\r\n");
      out.write("                vertical-align:top;\r\n");
      out.write("                width:250px;\r\n");
      out.write("            }\r\n");
      out.write("            .filesize{\r\n");
      out.write("                display:inline-block;\r\n");
      out.write("                vertical-align:top;\r\n");
      out.write("                color:#30693D;\r\n");
      out.write("                width:100px;\r\n");
      out.write("                margin-left:10px;\r\n");
      out.write("                margin-right:5px;\r\n");
      out.write("            }\r\n");
      out.write("            .abortFail{\r\n");
      out.write("                background-color:#A8352F;\r\n");
      out.write("                -moz-border-radius:4px;\r\n");
      out.write("                -webkit-border-radius:4px;\r\n");
      out.write("                border-radius:4px;display:inline-block;\r\n");
      out.write("                color:#fff;\r\n");
      out.write("                font-family:arial;font-size:13px;font-weight:normal;\r\n");
      out.write("                padding:4px 15px;\r\n");
      out.write("                cursor:pointer;\r\n");
      out.write("                vertical-align:top\r\n");
      out.write("            }        \r\n");
      out.write("            .abortSuccess{\r\n");
      out.write("                background-color:#819FF7;\r\n");
      out.write("                -moz-border-radius:4px;\r\n");
      out.write("                -webkit-border-radius:4px;\r\n");
      out.write("                border-radius:4px;display:inline-block;\r\n");
      out.write("                color:#fff;\r\n");
      out.write("                font-family:arial;font-size:13px;font-weight:normal;\r\n");
      out.write("                padding:4px 15px;\r\n");
      out.write("                cursor:pointer;\r\n");
      out.write("                vertical-align:top\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .css-cancel {\r\n");
      out.write("\t\t\t    display: inline-block;\r\n");
      out.write("\t\t\t    position: relative;\r\n");
      out.write("\t\t\t    margin: 0 20px 0 7px;\r\n");
      out.write("\t\t\t    padding: 0;\r\n");
      out.write("\t\t\t    width: 4px;\r\n");
      out.write("\t\t\t    height: 20px;\r\n");
      out.write("\t\t\t    background: #000;\r\n");
      out.write("\t\t\t    transform: rotate(45deg);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.css-cancel:before {\r\n");
      out.write("\t\t\t    display: block;\r\n");
      out.write("\t\t\t    content: \"\";\r\n");
      out.write("\t\t\t    position: absolute;\r\n");
      out.write("\t\t\t    top: 50%;\r\n");
      out.write("\t\t\t    left: -8px;\r\n");
      out.write("\t\t\t    width: 20px;\r\n");
      out.write("\t\t\t    height: 4px;\r\n");
      out.write("\t\t\t    margin-top: -2px;\r\n");
      out.write("\t\t\t    background: #000;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("        </style>\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("        \r\n");
      out.write("            $(document).ready(function(){\r\n");
      out.write("                 var test = \"\";\r\n");
      out.write("         \t\t/* \r\n");
      out.write("\t     \t\t\t웹브라우저에서 기본적으로 모든 영역에 드래그 앤 드랍 이벤트가 만들어져 있다.ex)파일 저장,해당 파일로 이동 등. \r\n");
      out.write("\t     \t\t\t그 기본 이벤트들을 우선적으로 제거\r\n");
      out.write("     \t\t\t*/ \t\t\t\r\n");
      out.write("                $(document).on('dragenter dragover drop', function (e){\r\n");
      out.write("                    e.stopPropagation();\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("         \t\t/* \r\n");
      out.write("     \t\t\t\t드래그 앤 드랍 이벤트가 발생했다는 css 추가\r\n");
      out.write(" \t\t\t\t*/ \t\r\n");
      out.write("                $(document).on(\"dragenter\",\".dragAndDropDiv\",function(e){\r\n");
      out.write("                    $(this).css('border', '2px solid #0B85A1');\r\n");
      out.write("                });\r\n");
      out.write("                $(document).on(\"dragover\",\".dragAndDropDiv\",function(e){\r\n");
      out.write("                \t$(this).css('border', '2px dotted #0B85A1');\r\n");
      out.write("                });       \r\n");
      out.write("                $(document).on(\"drop\",\".dragAndDropDiv\",function(e){           \r\n");
      out.write("                    $(this).css('border', '2px dotted #0B85A1');            \r\n");
      out.write("                 \t\r\n");
      out.write("                    var files = e.originalEvent.dataTransfer.files;\r\n");
      out.write("                    handleFileUpload(files,$(this));\r\n");
      out.write("                });\r\n");
      out.write("                 \r\n");
      out.write("\r\n");
      out.write("                 \r\n");
      out.write("                function handleFileUpload(files,obj)\r\n");
      out.write("                {\r\n");
      out.write("                   for (var i = 0; i < files.length; i++) \r\n");
      out.write("                   {\r\n");
      out.write("                        var formData = new FormData();\r\n");
      out.write("                        formData.append('file', files[i]);\r\n");
      out.write("                  \r\n");
      out.write("                        var file = files[i];\r\n");
      out.write("                        sendFileToServer(formData, file, obj);\r\n");
      out.write("                   }\r\n");
      out.write("                }\r\n");
      out.write("                 \r\n");
      out.write("                var rowCount=0;\r\n");
      out.write("                function createUploadFileList(obj, flag){\r\n");
      out.write("                    \r\n");
      out.write("                    rowCount++;\r\n");
      out.write("                    var row=\"odd\";\r\n");
      out.write("                    var cssFlag = \"\";\r\n");
      out.write("                    if(flag == \"성공\"){\r\n");
      out.write("                    \tcssFlag = \"abortSuccess\";\r\n");
      out.write("                    }else{\r\n");
      out.write("                    \tcssFlag = \"abortFail\"\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                    if(rowCount %2 ==0) row =\"even\";\r\n");
      out.write("                    this.statusbar = $(\"<div class='statusbar \"+row+\"'></div>\");\r\n");
      out.write("                    this.filename = $(\"<div class='filename'></div>\").appendTo(this.statusbar);\r\n");
      out.write("                    this.size = $(\"<div class='filesize'></div>\").appendTo(this.statusbar);\r\n");
      out.write("                    this.abort = $(\"<div class='\" + cssFlag + \"'>\" + flag + \"</div>\").appendTo(this.statusbar);\r\n");
      out.write("                    this.cancel = $(\"<div class='css-cancel'></div>\").appendTo(this.statusbar);\r\n");
      out.write("                     \r\n");
      out.write("                    obj.after(this.statusbar);\r\n");
      out.write("                  \r\n");
      out.write("                    this.setFileNameSize = function(name,size){\r\n");
      out.write("                        var sizeStr=\"\";\r\n");
      out.write("                        var sizeKB = size/1024;\r\n");
      out.write("                        if(parseInt(sizeKB) > 1024){\r\n");
      out.write("                            var sizeMB = sizeKB/1024;\r\n");
      out.write("                            sizeStr = sizeMB.toFixed(2)+\" MB\";\r\n");
      out.write("                        }else{\r\n");
      out.write("                            sizeStr = sizeKB.toFixed(2)+\" KB\";\r\n");
      out.write("                        }\r\n");
      out.write("                  \r\n");
      out.write("                        this.filename.html(name);\r\n");
      out.write("                        this.size.html(sizeStr);\r\n");
      out.write("                    }\r\n");
      out.write("                     \r\n");
      out.write("                     this.setCancel = function(){\r\n");
      out.write("                        this.cancel.click(function(){\r\n");
      out.write("                        \tthis.statusbar.empty();\r\n");
      out.write("                        });\r\n");
      out.write("                    } \r\n");
      out.write("                }\r\n");
      out.write("                 \r\n");
      out.write("                function sendFileToServer(formData, file, obj)\r\n");
      out.write("                {\r\n");
      out.write("                    var uploadURL = \"../fileUpload/post\"; //Upload URL\r\n");
      out.write("                    var extraData ={}; //Extra Data.\r\n");
      out.write("                    var flag = \"\";\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                        url: uploadURL,\r\n");
      out.write("                        type: \"POST\",\r\n");
      out.write("                        contentType:false,\r\n");
      out.write("                        processData: false,\r\n");
      out.write("                        cache: false,\r\n");
      out.write("                        data: formData,\r\n");
      out.write("                        success: function(data){\r\n");
      out.write("                        \tflag = \"성공\";\r\n");
      out.write("                        },\r\n");
      out.write("                        error: function(data){\r\n");
      out.write("                        \tflag = \"실패\";\r\n");
      out.write("                        },\r\n");
      out.write("                        complete: function(data){\r\n");
      out.write("                            var status = new createUploadFileList(obj, flag); //Using this we can set progress.\r\n");
      out.write("                            status.setFileNameSize(file.name, file.size);\r\n");
      out.write("                            status.setCancel();\r\n");
      out.write("                        }\r\n");
      out.write("                    }); \r\n");
      out.write("                }\r\n");
      out.write("                 \r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("    </head>\r\n");
      out.write("     \r\n");
      out.write("    <body>\r\n");
      out.write("        <div id=\"fileUpload\" class=\"dragAndDropDiv\">Drag & Drop Files Here</div>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/views/FileUpload.jsp(7,44) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/jquery/jquery-2.1.4.min.js");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
